//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tb_discord_ai_context")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub guild_id: i64,
    pub root_msg: i64,
    pub using_pro_model: bool,
    pub parent_context: Vec<i64>,
    pub thinking_bought: Option<i32>,
    #[sea_orm(column_type = "Text", nullable, unique)]
    pub cache_key: Option<String>,
    pub cache_created_at: DateTimeWithTimeZone,
    pub cache_expires_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::tb_context_to_msg_id::Entity")]
    TbContextToMsgId,
}

impl Related<super::tb_context_to_msg_id::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TbContextToMsgId.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
