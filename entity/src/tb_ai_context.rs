//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tb_ai_context")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub user_id: i64,
    #[sea_orm(column_type = "Text")]
    pub context: String,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTime,
    pub guild_id: i64,
    pub channel_id: i64,
    pub by_bot: bool,
    pub image_file_id: Option<i64>,
    pub show_though: Option<bool>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::tb_context_to_msg_id::Entity")]
    TbContextToMsgId,
    #[sea_orm(
        belongs_to = "super::tb_image_attach_file::Entity",
        from = "Column::ImageFileId",
        to = "super::tb_image_attach_file::Column::ImageId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TbImageAttachFile,
}

impl Related<super::tb_context_to_msg_id::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TbContextToMsgId.def()
    }
}

impl Related<super::tb_image_attach_file::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TbImageAttachFile.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
